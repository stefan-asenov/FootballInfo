//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FootballSystemDatabaseModel", "UserTeam", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballInfoSystem.User), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballInfoSystem.Team))]
[assembly: EdmRelationshipAttribute("FootballSystemDatabaseModel", "LeagueTeam", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.League), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballInfoSystem.Team))]
[assembly: EdmRelationshipAttribute("FootballSystemDatabaseModel", "TeamFootballer", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.Team), "Footballer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballInfoSystem.Footballer))]
[assembly: EdmRelationshipAttribute("FootballSystemDatabaseModel", "GameTeam", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.Game), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.Team))]
[assembly: EdmRelationshipAttribute("FootballSystemDatabaseModel", "GameTeam1", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.Game), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballInfoSystem.Team))]

#endregion

namespace FootballInfoSystem
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FootballSystemDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FootballSystemDatabaseEntities object using the connection string found in the 'FootballSystemDatabaseEntities' section of the application configuration file.
        /// </summary>
        public FootballSystemDatabaseEntities() : base("name=FootballSystemDatabaseEntities", "FootballSystemDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FootballSystemDatabaseEntities object.
        /// </summary>
        public FootballSystemDatabaseEntities(string connectionString) : base(connectionString, "FootballSystemDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FootballSystemDatabaseEntities object.
        /// </summary>
        public FootballSystemDatabaseEntities(EntityConnection connection) : base(connection, "FootballSystemDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<League> Leagues
        {
            get
            {
                if ((_Leagues == null))
                {
                    _Leagues = base.CreateObjectSet<League>("Leagues");
                }
                return _Leagues;
            }
        }
        private ObjectSet<League> _Leagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Footballer> Footballers
        {
            get
            {
                if ((_Footballers == null))
                {
                    _Footballers = base.CreateObjectSet<Footballer>("Footballers");
                }
                return _Footballers;
            }
        }
        private ObjectSet<Footballer> _Footballers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagues(League league)
        {
            base.AddObject("Leagues", league);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Footballers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFootballers(Footballer footballer)
        {
            base.AddObject("Footballers", footballer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FootballSystemDatabaseModel", Name="Footballer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Footballer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Footballer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="age">Initial value of the age property.</param>
        /// <param name="nationality">Initial value of the nationality property.</param>
        /// <param name="datеOfBirth">Initial value of the datеOfBirth property.</param>
        /// <param name="height">Initial value of the height property.</param>
        /// <param name="weight">Initial value of the weight property.</param>
        /// <param name="number">Initial value of the number property.</param>
        /// <param name="position">Initial value of the position property.</param>
        public static Footballer CreateFootballer(global::System.Int32 id, global::System.String name, global::System.String age, global::System.String nationality, global::System.DateTime datеOfBirth, global::System.Int16 height, global::System.Int16 weight, global::System.Int16 number, global::System.String position)
        {
            Footballer footballer = new Footballer();
            footballer.Id = id;
            footballer.name = name;
            footballer.age = age;
            footballer.nationality = nationality;
            footballer.datеOfBirth = datеOfBirth;
            footballer.height = height;
            footballer.weight = weight;
            footballer.number = number;
            footballer.position = position;
            return footballer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private global::System.String _age;
        partial void OnageChanging(global::System.String value);
        partial void OnageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nationality
        {
            get
            {
                return _nationality;
            }
            set
            {
                OnnationalityChanging(value);
                ReportPropertyChanging("nationality");
                _nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nationality");
                OnnationalityChanged();
            }
        }
        private global::System.String _nationality;
        partial void OnnationalityChanging(global::System.String value);
        partial void OnnationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime datеOfBirth
        {
            get
            {
                return _datеOfBirth;
            }
            set
            {
                OndatеOfBirthChanging(value);
                ReportPropertyChanging("datеOfBirth");
                _datеOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("datеOfBirth");
                OndatеOfBirthChanged();
            }
        }
        private global::System.DateTime _datеOfBirth;
        partial void OndatеOfBirthChanging(global::System.DateTime value);
        partial void OndatеOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private global::System.Int16 _height;
        partial void OnheightChanging(global::System.Int16 value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private global::System.Int16 _weight;
        partial void OnweightChanging(global::System.Int16 value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 number
        {
            get
            {
                return _number;
            }
            set
            {
                OnnumberChanging(value);
                ReportPropertyChanging("number");
                _number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("number");
                OnnumberChanged();
            }
        }
        private global::System.Int16 _number;
        partial void OnnumberChanging(global::System.Int16 value);
        partial void OnnumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String position
        {
            get
            {
                return _position;
            }
            set
            {
                OnpositionChanging(value);
                ReportPropertyChanging("position");
                _position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("position");
                OnpositionChanged();
            }
        }
        private global::System.String _position;
        partial void OnpositionChanging(global::System.String value);
        partial void OnpositionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "TeamFootballer", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.TeamFootballer", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.TeamFootballer", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.TeamFootballer", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("FootballSystemDatabaseModel.TeamFootballer", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FootballSystemDatabaseModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="result">Initial value of the result property.</param>
        /// <param name="matchDate">Initial value of the matchDate property.</param>
        public static Game CreateGame(global::System.Int32 id, global::System.String result, global::System.DateTime matchDate)
        {
            Game game = new Game();
            game.Id = id;
            game.result = result;
            game.matchDate = matchDate;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String result
        {
            get
            {
                return _result;
            }
            set
            {
                OnresultChanging(value);
                ReportPropertyChanging("result");
                _result = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("result");
                OnresultChanged();
            }
        }
        private global::System.String _result;
        partial void OnresultChanging(global::System.String value);
        partial void OnresultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime matchDate
        {
            get
            {
                return _matchDate;
            }
            set
            {
                OnmatchDateChanging(value);
                ReportPropertyChanging("matchDate");
                _matchDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("matchDate");
                OnmatchDateChanged();
            }
        }
        private global::System.DateTime _matchDate;
        partial void OnmatchDateChanging(global::System.DateTime value);
        partial void OnmatchDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "GameTeam", "Team")]
        public Team homeTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> homeTeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "GameTeam1", "Team")]
        public Team awayTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam1", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam1", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> awayTeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam1", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("FootballSystemDatabaseModel.GameTeam1", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FootballSystemDatabaseModel", Name="League")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class League : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new League object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="country">Initial value of the country property.</param>
        public static League CreateLeague(global::System.Int32 id, global::System.String name, global::System.String country)
        {
            League league = new League();
            league.Id = id;
            league.name = name;
            league.country = country;
            return league;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "LeagueTeam", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("FootballSystemDatabaseModel.LeagueTeam", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("FootballSystemDatabaseModel.LeagueTeam", "Team", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FootballSystemDatabaseModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="stadium">Initial value of the stadium property.</param>
        /// <param name="manager">Initial value of the manager property.</param>
        /// <param name="founded">Initial value of the founded property.</param>
        /// <param name="points">Initial value of the points property.</param>
        /// <param name="wins">Initial value of the wins property.</param>
        /// <param name="losts">Initial value of the losts property.</param>
        /// <param name="draws">Initial value of the draws property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String name, global::System.String stadium, global::System.String manager, global::System.DateTime founded, global::System.Int16 points, global::System.Int16 wins, global::System.Int16 losts, global::System.Int16 draws)
        {
            Team team = new Team();
            team.Id = id;
            team.name = name;
            team.stadium = stadium;
            team.manager = manager;
            team.founded = founded;
            team.points = points;
            team.wins = wins;
            team.losts = losts;
            team.draws = draws;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stadium
        {
            get
            {
                return _stadium;
            }
            set
            {
                OnstadiumChanging(value);
                ReportPropertyChanging("stadium");
                _stadium = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stadium");
                OnstadiumChanged();
            }
        }
        private global::System.String _stadium;
        partial void OnstadiumChanging(global::System.String value);
        partial void OnstadiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String manager
        {
            get
            {
                return _manager;
            }
            set
            {
                OnmanagerChanging(value);
                ReportPropertyChanging("manager");
                _manager = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("manager");
                OnmanagerChanged();
            }
        }
        private global::System.String _manager;
        partial void OnmanagerChanging(global::System.String value);
        partial void OnmanagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime founded
        {
            get
            {
                return _founded;
            }
            set
            {
                OnfoundedChanging(value);
                ReportPropertyChanging("founded");
                _founded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("founded");
                OnfoundedChanged();
            }
        }
        private global::System.DateTime _founded;
        partial void OnfoundedChanging(global::System.DateTime value);
        partial void OnfoundedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 points
        {
            get
            {
                return _points;
            }
            set
            {
                OnpointsChanging(value);
                ReportPropertyChanging("points");
                _points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("points");
                OnpointsChanged();
            }
        }
        private global::System.Int16 _points;
        partial void OnpointsChanging(global::System.Int16 value);
        partial void OnpointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 wins
        {
            get
            {
                return _wins;
            }
            set
            {
                OnwinsChanging(value);
                ReportPropertyChanging("wins");
                _wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("wins");
                OnwinsChanged();
            }
        }
        private global::System.Int16 _wins;
        partial void OnwinsChanging(global::System.Int16 value);
        partial void OnwinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 losts
        {
            get
            {
                return _losts;
            }
            set
            {
                OnlostsChanging(value);
                ReportPropertyChanging("losts");
                _losts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("losts");
                OnlostsChanged();
            }
        }
        private global::System.Int16 _losts;
        partial void OnlostsChanging(global::System.Int16 value);
        partial void OnlostsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 draws
        {
            get
            {
                return _draws;
            }
            set
            {
                OndrawsChanging(value);
                ReportPropertyChanging("draws");
                _draws = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("draws");
                OndrawsChanged();
            }
        }
        private global::System.Int16 _draws;
        partial void OndrawsChanging(global::System.Int16 value);
        partial void OndrawsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "UserTeam", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("FootballSystemDatabaseModel.UserTeam", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("FootballSystemDatabaseModel.UserTeam", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "LeagueTeam", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("FootballSystemDatabaseModel.LeagueTeam", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("FootballSystemDatabaseModel.LeagueTeam", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("FootballSystemDatabaseModel.LeagueTeam", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("FootballSystemDatabaseModel.LeagueTeam", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "TeamFootballer", "Footballer")]
        public EntityCollection<Footballer> Footballers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Footballer>("FootballSystemDatabaseModel.TeamFootballer", "Footballer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Footballer>("FootballSystemDatabaseModel.TeamFootballer", "Footballer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FootballSystemDatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the userName property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="firstName">Initial value of the firstName property.</param>
        /// <param name="lastName">Initial value of the lastName property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String firstName, global::System.String lastName)
        {
            User user = new User();
            user.Id = id;
            user.userName = userName;
            user.password = password;
            user.firstName = firstName;
            user.lastName = lastName;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String firstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                OnfirstNameChanging(value);
                ReportPropertyChanging("firstName");
                _firstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("firstName");
                OnfirstNameChanged();
            }
        }
        private global::System.String _firstName;
        partial void OnfirstNameChanging(global::System.String value);
        partial void OnfirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FootballSystemDatabaseModel", "UserTeam", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("FootballSystemDatabaseModel.UserTeam", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("FootballSystemDatabaseModel.UserTeam", "Team", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
